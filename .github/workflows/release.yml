name: release
on:
  push:
    tags:
      - 'v*'
jobs:
  docker_build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: nks-release.kr.ncr.ntruss.com/cert-manager-ncloud-pca-issuer
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to nks-release.kr.ncr.ntruss.com
        uses: docker/login-action@v1
        with:
          registry: nks-release.kr.ncr.ntruss.com
          username: ${{ secrets.NKS_CR_USERNAME  }}
          password: ${{ secrets.NKS_CR_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        if: ${{ !env.ACT }}
        with:
          context: .
          file: ./Dockerfile
#          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}


  prepare_release:
    runs-on: ubuntu-latest
    container: golang:1.18
    steps:
      -
        name: extract version
        id: extract_version
        run: /bin/bash -c 'echo ::set-output name=VERSION::$(echo ${GITHUB_REF##*/} | cut -c2-)'
      -
        name: install controller-gen
        run: go install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.9.2
      -
        name: install kustomize
        run:  go install sigs.k8s.io/kustomize/kustomize/v4@v4.5.5
      -
        name: checkout repository
        uses: actions/checkout@v2
      -
        name: generate manifests
        run: make manifests
      -
        name: generate deployment manifests
        id: deploy
        shell: bash
        env:
          IMG: nks-release.kr.ncr.ntruss.com/cert-manager-ncloud-pca-issuer
        run: |
          pushd config/manager
          kustomize edit set image controller=$IMG:$(echo ${GITHUB_REF##*/} | cut -c2-)
          popd
          kustomize build config/default | tee ncloud-pca-issuer-${GITHUB_REF##*/}.yaml
      -
        name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
          body: |
            Docker images are available at `nks-release.kr.ncr.ntruss.com/cert-manager-ncloud-pca-issuer:${{ steps.extract_version.outputs.VERSION }}`
            One-line install: `kubectl apply -f https://github.com/NaverCloudPlatform/ncloud-pca-issuer/releases/download/v${{ steps.extract_version.outputs.VERSION }}/ncloud-pca-issuer-v${{ steps.extract_version.outputs.VERSION }}.yaml`
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./ncloud-pca-issuer-v${{ steps.extract_version.outputs.VERSION }}.yaml
          asset_name: ncloud-pca-issuer-v${{ steps.extract_version.outputs.VERSION }}.yaml
          asset_content_type: application/x-yaml